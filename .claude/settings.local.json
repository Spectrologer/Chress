{
  "permissions": {
    "allow": [
      "Bash(awk:*)",
      "Bash(cut:*)",
      "Bash(for f in ./managers/InventoryManager.js ./managers/inventory/InventoryService.js ./managers/ItemManager.js)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(for f in ./ui/RadialInventoryUI.js ./ui/InventoryUI.js)",
      "Bash(git rm:*)",
      "Bash(npm test:*)",
      "Bash(find:*)",
      "Bash(./controllers/ZoneTransitionController.js )",
      "Bash(./core/AssetLoader.js )",
      "Bash(./core/commands/spawn/BaseSpawnCommand.js )",
      "Bash(./core/commands/spawn/EnemySpawnCommands.js )",
      "Bash(./core/commands/spawn/SpawnCommands.js )",
      "Bash(./core/ConsentManager.js )",
      "Bash(./core/consoleCommands.js )",
      "Bash(./core/ErrorHandler.js )",
      "Bash(./core/GameInitializer.js )",
      "Bash(./core/GameStateManager.js )",
      "Bash(./core/GlobalErrorHandler.js )",
      "Bash(./core/handlers/BaseZoneHandler.js )",
      "Bash(./core/handlers/surfaceHandler.js )",
      "Bash(./core/handlers/undergroundHandler.js )",
      "Bash(./core/SaveDeserializer.js )",
      "Bash(./core/SoundManager.js )",
      "Bash(./core/ZoneGenerator.js )",
      "Bash(./core/zoneMutators.js )",
      "Bash(./core/zoneSpawnManager.js )",
      "Bash(./core/ZoneStateRestorer.js )",
      "Bash(./generators/FeatureGenerator.js:*)",
      "Bash(./generators/GeneratorUtils.js )",
      "Bash(./generators/ItemGenerator.js )",
      "Bash(./generators/StructureGenerator.js )",
      "Bash(./generators/ZoneStateManager.js )",
      "Bash(./ui/DialogueManager.js )",
      "Bash(./ui/MessageLog.js )",
      "Bash(./ui/MessageManager.js )",
      "Bash(./ui/NoteStack.js )",
      "Bash(./ui/OverlayManager.js )",
      "Bash(./ui/OverlayMessageHandler.js )",
      "Bash(./ui/TypewriterController.js )",
      "Bash(./ui/UIManager.js)",
      "Bash(powershell -Command \"(Get-Content ''./ui/DialogueManager.js'' -Raw) -replace \"\"import logger from ''(.*)logger\\.js''\"\", \"\"import { logger } from ''$1logger.js''\"\" | Set-Content ''./ui/DialogueManager.js''\")",
      "Bash(powershell -Command \"$files = @(\n  ''./controllers/ZoneTransitionController.js'',\n  ''./core/AssetLoader.js'',\n  ''./core/commands/spawn/BaseSpawnCommand.js'',\n  ''./core/commands/spawn/EnemySpawnCommands.js'',\n  ''./core/commands/spawn/SpawnCommands.js'',\n  ''./core/ConsentManager.js'',\n  ''./core/consoleCommands.js'',\n  ''./core/ErrorHandler.js'',\n  ''./core/GameInitializer.js'',\n  ''./core/GameStateManager.js'',\n  ''./core/handlers/BaseZoneHandler.js'',\n  ''./core/handlers/surfaceHandler.js'',\n  ''./core/handlers/undergroundHandler.js'',\n  ''./core/SaveDeserializer.js'',\n  ''./core/SoundManager.js'',\n  ''./core/ZoneGenerator.js'',\n  ''./core/zoneMutators.js'',\n  ''./core/zoneSpawnManager.js'',\n  ''./core/ZoneStateRestorer.js'',\n  ''./generators/FeatureGenerator.js'',\n  ''./generators/GeneratorUtils.js'',\n  ''./generators/ItemGenerator.js'',\n  ''./generators/StructureGenerator.js'',\n  ''./generators/ZoneStateManager.js'',\n  ''./ui/DialogueManager.js'',\n  ''./ui/MessageLog.js'',\n  ''./ui/MessageManager.js'',\n  ''./ui/NoteStack.js'',\n  ''./ui/OverlayManager.js'',\n  ''./ui/OverlayMessageHandler.js'',\n  ''./ui/TypewriterController.js'',\n  ''./ui/UIManager.js''\n)\nforeach ($file in $files) {\n  $content = Get-Content $file -Raw\n  $content = $content -replace \"\"import logger from ''(.*)logger\\.js''\"\", \"\"import { logger } from ''\\`$1logger.js''\"\"\n  Set-Content -Path $file -Value $content -NoNewline\n}\nWrite-Output ''Updated all logger imports''\")",
      "Bash(cat:*)",
      "Bash(node -e:*)",
      "Bash(node tests/ContentRegistry.test.js:*)",
      "Bash(node tests/tmp_stack_test.mjs:*)",
      "Bash(node:*)",
      "Bash(powershell -Command \"(Get-Content ''c:\\Users\\virgi\\OneDrive\\Desktop\\Apps\\Chress\\core\\consoleCommands.js'' | Measure-Object -Line).Lines\")",
      "Bash(wc:*)",
      "Bash(powershell -Command:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)"
    ],
    "deny": [],
    "ask": []
  }
}
